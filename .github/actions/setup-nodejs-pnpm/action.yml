name: setup-nodejs-pnpm

description: |
  This action checks out the repository and sets up the Node.js environment with pnpm.

inputs:
  working-dir:
    description: "The working directory to run the setup in"
    required: false
    default: "."
  nodejs-version:
    description: "The Node.js version to setup"
    required: false
    default: "23"
  prod:
    description: "Whether to install production dependencies only"
    required: false
    default: "false"
  install-recursive:
    description: "Whether to install dependencies recursively"
    required: false
    default: "false"
  install-filter:
    description: "Name of the target package whose dependencies should be installed"
    required: false
    default: ""

runs:
  using: composite
  steps:
    - name: Check inputs
      shell: bash
      run: |
        if [[ "${{ inputs.install-recursive }}" == "true" && -n "${{ inputs.install-filter }}" ]]; then
          echo "Error: install-recursive and install-filter cannot be used together"
          exit 1
        fi
    - name: Setup pnpm
      id: pnpm-setup
      uses: pnpm/action-setup@a3252b78c470c02df07e9d59298aecedc3ccdd6d # v3.0.0
      with:
        run_install: false
        package_json_file: ${{ inputs.working-dir }}/package.json
    - name: Setup Node.js
      if: ${{ !env.ACT }}
      id: setup-nodejs
      uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4.0.1
      with:
        node-version: ${{ inputs.nodejs-version }}
        cache: pnpm
        cache-dependency-path: ${{ inputs.working-dir }}/pnpm-lock.yaml
    - name: Install prod dependencies
      if: ${{ inputs.prod == 'true' }}
      working-directory: ${{ inputs.working-dir }}
      shell: bash
      run: pnpm ${{ inputs.install-recursive && '--recursive' || '' }} ${{ inputs.install-filter && format('--fail-if-no-match --filter {0}...', inputs.install-filter) || '' }} install --prod
    - name: Install dependencies
      if: ${{ inputs.prod != 'true' }}
      working-directory: ${{ inputs.working-dir }}
      shell: bash
      run: pnpm ${{ inputs.install-recursive && '--recursive' || '' }} ${{ inputs.install-filter && format('--fail-if-no-match --filter {0}...', inputs.install-filter) || '' }} install

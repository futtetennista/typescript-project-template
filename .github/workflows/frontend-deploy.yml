name: frontend-deploy

permissions:
  contents: read

on:
  push:
    branches:
      - none
    paths:
      - ".github/workflows/frontend-deploy.yml"
      - "packages/frontend/**"
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    # environment: production
    steps:
      - name: Checkout repo
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - uses: ./.github/actions/setup-nodejs-pnpm
        name: Set up node.js with pnpm
        with:
          install-filter: frontend
      - name: Load secrets
        uses: 1password/load-secrets-action@581a835fb51b8e7ec56b71cf2ffddd7e68bb25e0 # v2
        with:
          export-env: true
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          AWS_ACCESS_KEY_ID: op://app/aws/access-key-id
          AWS_SECRET_ACCESS_KEY: op://app/aws/secret-access-key
      - name: Build frontend
        working-directory: ./packages/frontend
        run: pnpm run build
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}
      - name: Deploy site to S3 bucket
        working-directory: ./packages/frontend
        run: aws s3 sync ./public/ s3://${{ vars.AWS_S3_BUCKET_NAME }} --delete
      - name: Invalidate CloudFront cache
        run: aws cloudfront create-invalidation --distribution-id ${{ vars.AWS_CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
